-- В интернет-магазине продаются книги. Каждая книга имеет название, 
-- написана одним автором, относится к одному жанру, имеет определенную цену. 
-- В магазине в наличии есть несколько экземпляров каждой книги. 

-- Покупатель регистрируется на сайте интернет-магазина, 
-- задает свое имя и фамилию, электронную почту и город проживания. 
-- Он может сформировать один или несколько заказов, 
-- для каждого заказа написать какие-то пожелания.
--  Каждый заказ включает одну или несколько книг, 
-- каждую книгу можно заказать в нескольких экземплярах. 
-- Затем заказ проходит ряд последовательных этапов (операций): 
-- оплачивается, упаковывается, передается курьеру или транспортной компании 
-- для транспортировки и, наконец, доставляется покупателю. 
-- Фиксируется дата каждой операции. Для каждого города известно среднее время доставки книг.

-- При этом в магазине ведется учет книг, при покупке их количество уменьшается, 
-- при поступлении товара увеличивается, при исчерпании количества – оформляется заказ и пр.


-- #1
/*
Включить нового человека в таблицу с клиентами. Его имя Попов Илья, его email popov@test, проживает он в Москве.
*/

insert into client
        select 5, 'Попов Илья', city_id, 'popov@test'
        from city
        where name_city = 'Москва'
;

-- #2
/*
Создать новый заказ для Попова Ильи. Его комментарий для заказа: 
«Связаться со мной по вопросу доставки». 
*/

insert into buy
        select 5, 'Связаться со мной по вопросу доставки', client_id
        from client
        where name_client = 'Попов Илья'
;

-- #3
/*
В таблицу buy_book добавить заказ с номером 5. 
Этот заказ должен содержать книгу Пастернака «Лирика» 
в количестве двух экземпляров и книгу Булгакова «Белая гвардия» в одном экземпляре.
*/

insert into buy_book
        select 8, 5, book_id, 2
        from book inner join author using(author_id)
        where title = 'Лирика' 
                and name_author = 'Пастернак Б.Л.'
        union
        select 9, 5, book_id, 1
        from book inner join author using(author_id)
        where title = 'Белая гвардия' 
                and name_author = 'Булгаков М.А.'
;

-- #4
/*
Количество тех книг на складе, которые были включены в заказ с номером 5, 
уменьшить на то количество, которое в заказе с номером 5  указано.
*/
update  book 
        inner join buy_book using(book_id)
        set book.amount = book.amount - buy_book.amount
where buy_book.buy_id = 5
;

-- #5
/*
Создать счет (таблицу buy_pay) на оплату заказа с номером 5, 
в который включить название книг, их автора, цену, 
количество заказанных книг и  стоимость. 
Информацию в таблицу занести в отсортированном по названиям книг виде.
*/
create table buy_pay (
        title varchar(50),
        author varchar(30),
        price decimal(8,2),
        amount int,
        Стоимость decimal(8,2)
)
;

insert into buy_pay
        select  book.title, name_author, book.price, 
                buy_book.amount, book.price*buy_book.amount
        from  book
                inner join author using(author_id)
                inner join buy_book using(book_id)
        where buy_book.buy_id = 5
        order by title
;

select * from buy_pay;

-- #6
/*
Создать общий счет (таблицу buy_pay) на оплату заказа с номером 5. 
Куда включить номер заказа, количество книг в заказе и его общую стоимость. 
Для решения используйте ОДИН запрос.
*/

create table buy_pay
        select  buy_id, 
                sum(buy_book.amount) as Количество, 
                sum(book.price*buy_book.amount) as Итого
        from buy_book
                inner join book using(book_id)
        group by buy_id
        having buy_id = 5
;

-- #7
/*
В таблицу buy_step для заказа с номером 5 включить все этапы из таблицы step, 
которые должен пройти этот заказ. В столбцы date_step_beg и 
date_step_end всех записей занести Null.
*/

insert into buy_step (buy_id, step_id, date_step_beg, date_step_end)
        select buy_id, step_id, null, null
        from buy cross join step
        where buy_id = 5
;


-- #8
/*
В таблицу buy_step занести дату 12.04.2020 выставления счета на оплату заказа с номером 5.
Правильнее было бы занести не конкретную, а текущую дату. 
Это можно сделать с помощью функции Now(). 
Но при этом в разные дни будут вставляться разная дата, и задание нельзя будет проверить, 
поэтому  вставим дату 12.04.2020.
*/

update buy_step
        set date_step_beg = '2020-04-12'
        where buy_id = 5
        and step_id = 
                (
                select step_id
                from step
                where name_step = 'Оплата'
                )
;

-- #9
/*
Завершить этап «Оплата» для заказа с номером 5, 
вставив в столбец date_step_end дату 13.04.2020, 
и начать следующий этап («Упаковка»), задав в столбце date_step_beg для этого этапа ту же дату.

Реализовать два запроса для завершения этапа и начала следующего. 
Они должны быть записаны в общем виде, чтобы его можно было применять для любых этапов, 
изменив только текущий этап. Для примера пусть это будет этап «Оплата».
*/

update buy_step
        set date_step_end = '2020-04-13'
where step_id = 
        (select step_id from step where name_step = 'Оплата')
        and buy_id = 5
;

update buy_step
        set date_step_beg = '2020-04-13'
where step_id = 
        (select step_id+1 from step where name_step = 'Оплата')
        and buy_id = 5
;